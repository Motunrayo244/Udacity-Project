<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "https://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg xmlns="http://www.w3.org/2000/svg" id="sfn-svg" class="sfn-workflow-graph" width="248" height="323">
    
    
<g transform="translate(11.999992370605469,19.180986404418945)"><g class="nodes"><g class="node-container" transform="translate(111.62590789794922,18.800000190734863)"><g class="node anchor"><circle class="shape" x="-15.980987548828125" y="-8.800000190734863" r="25.980987548828125"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Start</tspan></text></g></g><g class="node-container" transform="translate(111.62590789794922,269.20000171661377)"><g class="node anchor"><circle class="shape" x="-12.175000190734863" y="-8.800000190734863" r="22.175000190734863"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">End</tspan></text></g></g><g class="node-container" transform="translate(111.62590789794922,81.40000057220459)"><g class="node state Task NotYetStarted"><rect class="shape" rx="5" ry="5" x="-107.7562484741211" y="-18.800000190734863" width="215.5124969482422" height="37.60000038146973"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Lambda Invoke-serialize image</tspan></text></g></g><g class="node-container" transform="translate(111.62590789794922,144.00000095367432)"><g class="node state Task NotYetStarted"><rect class="shape" rx="5" ry="5" x="-111.62590789794922" y="-18.800000190734863" width="223.25181579589844" height="37.60000038146973"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Lambda Invoke -image classifier</tspan></text></g></g><g class="node-container" transform="translate(111.62590789794922,206.60000133514404)"><g class="node state Task NotYetStarted"><rect class="shape" rx="5" ry="5" x="-92.11250305175781" y="-18.800000190734863" width="184.22500610351562" height="37.60000038146973"/><text class="label"><tspan xml:space="preserve" text-anchor="middle" alignment-baseline="central">Lambda Invoke -inference</tspan></text></g></g></g><g class="edges"><g class="edge"><path class="path" marker-end="url(#arrowhead181)" d="M111.62590789794922,100.20000076293945L111.6259078979492,102.28333409627277C111.62590789794922,104.36666742960611,111.62590789794922,108.53333409627277,111.6259078979492,112.70000076293944C111.62590789794922,116.86666742960611,111.62590789794922,121.03333409627278,111.6259078979492,123.11666742960611L111.62590789794922,125.20000076293945" style="fill: none;"/><defs><marker id="arrowhead181" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead182)" d="M111.62590789794922,44.78098773956299L111.6259078979492,45.66748984654744C111.62590789794922,46.5539919535319,111.62590789794922,48.32699616750081,111.6259078979492,51.2968316078186C111.62590789794922,54.26666704813639,111.62590789794922,58.433333714803055,111.6259078979492,60.51666704813639L111.62590789794922,62.60000038146973" style="fill: none;"/><defs><marker id="arrowhead182" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead183)" d="M111.62590789794922,162.80000114440918L111.6259078979492,164.8833344777425C111.62590789794922,166.96666781107584,111.62590789794922,171.1333344777425,111.6259078979492,175.30000114440918C111.62590789794922,179.46666781107584,111.62590789794922,183.6333344777425,111.6259078979492,185.71666781107584L111.62590789794922,187.80000114440918" style="fill: none;"/><defs><marker id="arrowhead183" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g><g class="edge"><path class="path" marker-end="url(#arrowhead184)" d="M111.62590789794922,225.4000015258789L111.6259078979492,227.4833348592122C111.62590789794922,229.56666819254554,111.62590789794922,233.73333485921222,111.6259078979492,237.3375015258789C111.62590789794922,240.94166819254556,111.62590789794922,243.98333485921222,111.6259078979492,245.50416819254556L111.62590789794922,247.0250015258789" style="fill: none;"/><defs><marker id="arrowhead184" viewBox="0 0 10 10" refX="9" refY="5" markerUnits="strokeWidth" markerWidth="8" markerHeight="6" orient="auto"><path d="M 0 0 L 10 5 L 0 10 z"/></marker></defs></g></g></g><style xmlns="http://www.w3.org/1999/xhtml">.node &gt; .shape {stroke: #555555;stroke-width: 0.6px;fill: #FFFFFF;} path {stroke: #555;background-color: #555;stroke-width: 1px;} .node.state.NotYetStarted &gt; .shape,.node.state.Container &gt; .shape {stroke-dasharray: 5 2;} .node.state.Failed &gt; .shape,rect.legend.Failed {fill: #DE322F;} .node.state.CaughtError &gt; .shape,rect.legend.CaughtError {fill: #FFA500;} .node.state.Succeeded &gt; .shape,rect.legend.Succeeded {fill: #2BD62E;} .node.state.InProgress &gt; .shape,rect.legend.InProgress {fill: #53c9ed;} .node.state.Cancelled &gt; .shape,rect.legend.Cancelled {fill: #dddddd;} .node.anchor &gt; .shape {fill: #FFDA75;} .node.state.hovered:not(.selected):not(.NotYetStarted) &gt; .shape,.node.selected &gt; .shape {stroke: #555555;stroke-width: 2px;} .node.state.Container.Failed &gt; .shape {fill: #EE9592;} .node.state.Container.CaughtError &gt; .shape {fill: #FFD27F;} .node.state.Container.Succeeded &gt; .shape {fill: #91EA9A;} .node.state.Container.InProgress &gt; .shape {fill :#A9E4F7;} .node.state.Container.Cancelled &gt; .shape {fill: #EEEEEE;} marker {fill: #555555;} .node.anchor,.node.state.NotYetStarted {cursor: default;} .node.state {cursor: pointer;} tspan .label {font-weight: normal;font-size: 12px;text-shadow: none;} </style></svg>